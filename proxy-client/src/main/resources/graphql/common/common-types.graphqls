scalar Date

interface Node {
    id: ID!
}

interface PaginatedList {
    items: [Node!]!
    totalItems: Int!
}

enum SortOrder {
    ASC
    DESC
}

input StringOperators {
    eq: String
    contains: String
}

input BooleanOperators {
    eq: Boolean
}

input NumberRange {
    start: Float!
    end: Float!
}

input NumberOperators {
    eq: Float
    lt: Float
    lte: Float
    gt: Float
    gte: Float
    between: NumberRange
}

input DateRange {
    start: Date!
    end: Date!
}

input DateOperators {
    eq: Date
    before: Date
    after: Date
    between: DateRange
}

enum LogicalOperator {
    AND
    OR
}
