
server:
  port: 8900

grpc:
  client:
    grpc-user-service:
      address: static://localhost:8700
      negotiationType: plaintext
    grpc-discord-service:
      address: static://localhost:8800
      negotiationType: plaintext

spring:
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: 1026253179745-ds5l31utthl7br58omfhd6srlnt8f0ur.apps.googleusercontent.com
            clientSecret: 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
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
          facebook:
            clientId: 828934022058611
            clientSecret: 15fe0132fc2a991d598e2f10714c5a98
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - public_profile
          github:
            clientId: cc8848aed2664162f20a
            clientSecret: 5e936ae706853899b90510a8240869546054da1b
            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - user:email
              - read:user
          provider:
            facebook:
              authorizationUri: https://www.facebook.com/v3.0/dialog/oauth
              tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
              userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)
app:
  auth:
    accessTokenSecret: 04ca023b39512e46d0c2cf4b48d5aac61d34302994c87ed4eff225dcf3b0a218739f3897051a057f9b846a69ea2927a587044164b7bae5e1306219d50b588cb1
    accessTokenExpirationMsec: 3600000 #1 hour
    refreshTokenSecret: 5623456823475834725fgdgd
    refreshTokenExpirationMsec: 2592000 #30 days
    accessTokenCookieName: accessToken
    refreshTokenCookieName: refreshToken
  cors:
    allowedOrigins: http://localhost:3000,http://localhost:8080,http://localhost:8900
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect
    authorizedRedirectSuccessUri: http://localhost:3000
    authorizedRedirectFailureUri: http://localhost:3000/sign-in

ACCESS_TOKEN_KEY_PATH: "token-key/access-token-private.key"
REFRESH_TOKEN_KEY_PATH: "token-key/refresh-token-private.key"