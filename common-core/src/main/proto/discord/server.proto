syntax = "proto3";

package vuong.app.v1.discord;
option java_package = "com.vuong.app.v1.discord";
option java_multiple_files = true;
option java_outer_classname = "ServerProto";

import "common.proto";

message GrpcServer {
  string server_id = 1;
  string name = 2;
  string img_url = 3;
  string invite_code = 4;
  string author_id = 5;
  string created_at = 6;
  string updated_at = 7;
}

message GrpcCreateServerRequest {
  string name = 1;
  string img_url = 2;
  string author_id = 3;
}

message GrpcCreateServerResponse {
  string server_id = 1;
}

message GrpcGetServersJoinRequest {
  string profile_id = 1;
  int32 page_number = 4;
  int32 page_size = 5;
}

message GrpcGetServersJoinResponse {
  GrpcMeta meta = 1;
  repeated GrpcServer content = 2;
}

message GrpcGetFirstServerJoinRequest {
  string profile_id = 1;
}

message GrpcGetFirstServerJoinResponse {
  GrpcServer result = 1;
}

message GrpcGetServerJoinByServerIdRequest {
  string profile_id = 1;
  string server_id = 2;
}

message GrpcGetServerJoinByServerIdResponse {
  GrpcServer result = 1;
}

message GrpcGetServerJoinIdsRequest {
  string profile_id = 1;
}

message GrpcGetServerJoinIdsResponse {
  repeated string result = 1;
}

message GrpcJoinServerByInviteCodeRequest {
  string profile_id = 1;
  string invite_code = 2;
}

message GrpcJoinServerByInviteCodeResponse {
  string server_id = 1;
}

message GrpcLeaveServerRequest {
  string profile_id = 1;
  string server_id = 2;
}

message GrpcLeaveServerResponse {
  string member_id = 1;
}

service ServerService {
  rpc createServer(GrpcCreateServerRequest) returns (GrpcCreateServerResponse);
  rpc getServersJoin(GrpcGetServersJoinRequest) returns (GrpcGetServersJoinResponse);
  rpc getFirstServerJoin(GrpcGetFirstServerJoinRequest) returns (GrpcGetFirstServerJoinResponse);
  rpc getServerJoinByServerId(GrpcGetServerJoinByServerIdRequest) returns (GrpcGetServerJoinByServerIdResponse);
  rpc getServerJoinIds(GrpcGetServerJoinIdsRequest) returns (GrpcGetServerJoinIdsResponse);
  rpc joinServerByInviteCode(GrpcJoinServerByInviteCodeRequest) returns (GrpcJoinServerByInviteCodeResponse);
  rpc leaveServer(GrpcLeaveServerRequest) returns (GrpcLeaveServerResponse);
}