syntax = "proto3";

package vuong.app.v1.discord;
option java_package = "com.vuong.app.v1.discord";
option java_multiple_files = true;
option java_outer_classname = "MessageProto";

import "common.proto";
import "discord/member.proto";

enum GrpcMessageEventType {
  MESSAGE_EVENT_TYPE_UNSPECIFIED = 0;
  MESSAGE_EVENT_TYPE_ADD = 1;
  MESSAGE_EVENT_TYPE_EDIT = 2;
}

message GrpcMessageEvent {
  GrpcMessageEventType type = 1;
  GrpcMessage message = 2;
}

message GrpcMessage {
  string message_id = 1;
  optional string content = 2;
  optional string file_url = 3;
  string channel_id = 4;
  string created_at = 5;
  string updated_at = 6;
  optional string deleted_at = 7;
  optional string deleted_by = 8;
  GrpcMemberProfile author = 9;
}

message GrpcCreateMessageRequest {
  optional string content = 1;
  optional string file_url = 2;
  string channel_id = 3;
  string profile_id = 4;
}

message GrpcCreateMessageResponse {
  string message_id = 1;
}

message GrpcUpdateMessageRequest {
  string message_id = 1;
  string content = 2;
  string profile_id = 3;
}

message GrpcUpdateMessageResponse {
  string message_id = 1;
}

message GrpcDeleteMessageRequest {
  string message_id = 1;
  string profile_id = 2;
}

message GrpcDeleteMessageResponse {
  bool deleted = 1;
}

message GrpcGetMessagesByChannelIdRequest {
  string channel_id = 1;
  string profile_id = 2;
  int32 page_number = 3;
  int32 page_size = 4;
}

message GrpcGetMessagesByChannelIdResponse {
  GrpcMeta meta = 1;
  repeated GrpcMessage content = 2;
}

service MessageService {
  rpc createMessage(GrpcCreateMessageRequest) returns (GrpcCreateMessageResponse);
  rpc updateMessage(GrpcUpdateMessageRequest) returns (GrpcUpdateMessageResponse);
  rpc deleteMessage(GrpcDeleteMessageRequest) returns (GrpcDeleteMessageResponse);
  rpc getMessagesByChannelId(GrpcGetMessagesByChannelIdRequest) returns (GrpcGetMessagesByChannelIdResponse);
}