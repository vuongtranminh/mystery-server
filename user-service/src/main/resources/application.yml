
spring:
  application:
    name: USER-SERVICE
  profiles:
    active:
      - dev
  kafka:
    consumer:
      bootstrap-servers: localhost:8098
      group-id: group_id
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
        properties:
          spring:
            json:
              trusted:
                packages: "com.codersee.kafkaexample.dto"
            deserializer:
              value:
                delegate:
                  class: org.springframework.kafka.support.serializer.JsonDeserializer
    producer:
      bootstrap-servers: localhost:8098
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
  redis:
    password: test
    data:
      redis:
        host: ${REDIS_HOST:localhost}
        port: ${REDIS_PORT:6379}

logging:
  file:
    name: src/main/resources/script/stage_log.log
  logback:
    rollingpolicy:
      clean-history-on-start: true